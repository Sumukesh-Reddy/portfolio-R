{"ast":null,"code":"var _jsxFileName = \"/Users/sumukesh/Documents/portfolio-react/portfolio/frontend/src/components/Achievments.jsx\";\nimport gradientClubImage from '../assets/images/gradient.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Achievements = () => {\n  const achievements = [{\n    id: 1,\n    title: \"Contest Manager\",\n    organization: \"Gradient Club\",\n    description: \"Organized and managed multiple coding competitions with 100+ participants\",\n    date: \"2023 - Present\",\n    image: gradientClubImage\n  }];\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"achievements\",\n    className: \"achievements\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"section-title\",\n        children: \"Achievements\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"achievements-grid\",\n        children: achievements.map(achievement => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"achievement-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"achievement-image\",\n            children: achievement.image ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: achievement.image,\n              alt: achievement.organization\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"achievement-icon\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-trophy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"achievement-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: achievement.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"organization\",\n              children: achievement.organization\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"description\",\n              children: achievement.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"date\",\n              children: achievement.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this)]\n        }, achievement.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_c = Achievements;\nexport default Achievements;\nvar _c;\n$RefreshReg$(_c, \"Achievements\");","map":{"version":3,"names":["gradientClubImage","jsxDEV","_jsxDEV","Achievements","achievements","id","title","organization","description","date","image","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","achievement","src","alt","_c","$RefreshReg$"],"sources":["/Users/sumukesh/Documents/portfolio-react/portfolio/frontend/src/components/Achievments.jsx"],"sourcesContent":["import gradientClubImage from '../assets/images/gradient.png'; \n\nconst Achievements = () => {\n  const achievements = [\n    {\n      id: 1,\n      title: \"Contest Manager\",\n      organization: \"Gradient Club\",\n      description: \"Organized and managed multiple coding competitions with 100+ participants\",\n      date: \"2023 - Present\",\n      image: gradientClubImage\n    },\n  ];\n\n  return (\n    <section id=\"achievements\" className=\"achievements\">\n      <div className=\"container\">\n        <h2 className=\"section-title\">Achievements</h2>\n        <div className=\"achievements-grid\">\n          {achievements.map((achievement) => (\n            <div key={achievement.id} className=\"achievement-card\">\n              <div className=\"achievement-image\">\n                {achievement.image ? (\n                  <img src={achievement.image} alt={achievement.organization} />\n                ) : (\n                  <div className=\"achievement-icon\">\n                    <i className=\"fas fa-trophy\"></i>\n                  </div>\n                )}\n              </div>\n              <div className=\"achievement-content\">\n                <h3>{achievement.title}</h3>\n                <p className=\"organization\">{achievement.organization}</p>\n                <p className=\"description\">{achievement.description}</p>\n                <p className=\"date\">{achievement.date}</p>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Achievements;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}