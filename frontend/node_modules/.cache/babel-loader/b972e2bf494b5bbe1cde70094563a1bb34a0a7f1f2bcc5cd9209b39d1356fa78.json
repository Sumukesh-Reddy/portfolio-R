{"ast":null,"code":"var _jsxFileName = \"/Users/sumukesh/Documents/portfolio-react/portfolio/src/components/Contact.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { sendMessage } from '../services/api';\nimport '../styles/main.css';\nimport useScrollAnimation from '../hooks/useScrollAnimation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Contact = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    message: ''\n  });\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [notification, setNotification] = useState(null);\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!formData.name || !formData.email || !formData.message) {\n      showNotification('Please fill in all fields', 'error');\n      return;\n    }\n    setIsSubmitting(true);\n    try {\n      const response = await sendMessage(formData);\n      if (response) {\n        showNotification('Message sent successfully!', 'success');\n        setFormData({\n          name: '',\n          email: '',\n          message: ''\n        });\n      } else {\n        throw new Error('Failed to send message');\n      }\n    } catch (error) {\n      console.error('Form submission error:', error);\n      showNotification('Failed to send message. Please try again.', 'error');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  const showNotification = (message, type) => {\n    setNotification({\n      message,\n      type\n    });\n    setTimeout(() => setNotification(null), 3000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"contact\",\n    className: \"section\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"section-title\",\n        children: \"Contact Me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"contact-form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"Your Name\",\n          value: formData.name,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Your Email\",\n          value: formData.email,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"message\",\n          placeholder: \"Your Message\",\n          value: formData.message,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn\",\n          disabled: isSubmitting,\n          children: isSubmitting ? 'Sending...' : 'Send Message'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), notification && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `notification ${notification.type}`,\n        children: notification.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(Contact, \"EXjsBQlnF+ae0N79TL1ntNW99RU=\");\n_c = Contact;\nexport default Contact;\nvar _c;\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["useState","sendMessage","useScrollAnimation","jsxDEV","_jsxDEV","Contact","_s","formData","setFormData","name","email","message","isSubmitting","setIsSubmitting","notification","setNotification","handleChange","e","target","value","handleSubmit","preventDefault","showNotification","response","Error","error","console","type","setTimeout","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","onChange","required","disabled","_c","$RefreshReg$"],"sources":["/Users/sumukesh/Documents/portfolio-react/portfolio/src/components/Contact.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { sendMessage } from '../services/api';\nimport '../styles/main.css';\nimport useScrollAnimation from '../hooks/useScrollAnimation';\n\nconst Contact = () => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    message: ''\n  });\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [notification, setNotification] = useState(null);\n\n  const handleChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!formData.name || !formData.email || !formData.message) {\n      showNotification('Please fill in all fields', 'error');\n      return;\n    }\n\n    setIsSubmitting(true);\n    \n    try {\n      const response = await sendMessage(formData);\n      \n      if (response) {\n        showNotification('Message sent successfully!', 'success');\n        setFormData({ name: '', email: '', message: '' });\n      } else {\n        throw new Error('Failed to send message');\n      }\n    } catch (error) {\n      console.error('Form submission error:', error);\n      showNotification('Failed to send message. Please try again.', 'error');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const showNotification = (message, type) => {\n    setNotification({ message, type });\n    setTimeout(() => setNotification(null), 3000);\n  };\n\n  return (\n    <section id=\"contact\" className=\"section\">\n      <div className=\"container\">\n        <h2 className=\"section-title\">Contact Me</h2>\n        <form className=\"contact-form\" onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Your Name\"\n            value={formData.name}\n            onChange={handleChange}\n            required\n          />\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Your Email\"\n            value={formData.email}\n            onChange={handleChange}\n            required\n          />\n          <textarea\n            name=\"message\"\n            placeholder=\"Your Message\"\n            value={formData.message}\n            onChange={handleChange}\n            required\n          ></textarea>\n          <button \n            type=\"submit\" \n            className=\"btn\" \n            disabled={isSubmitting}\n          >\n            {isSubmitting ? 'Sending...' : 'Send Message'}\n          </button>\n        </form>\n        {notification && (\n          <div className={`notification ${notification.type}`}>\n            {notification.message}\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default Contact;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}